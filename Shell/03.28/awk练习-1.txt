使用awk对/etc/passwd的数据进行处理：
1. awk ，功能是打印所有输入行。					#awk '{print $0}' passwd
2. awk，打印输入文件第八行。						#awk -F: 'NR==8{print}'  passwd
3. 用 awk 命令打印文件所有行的第一个字段。				#awk -F: 'NR>0{print $1}' passwd
4. 打印输入行总数。							#awk -F: 'END{print NR}' passwd 
5. 打印每行字段数。							#awk -F: '{print NF}' passwd
6. 打印最后一行的最后一个字段的值。					#awk -F: 'END{print $NF}' passwd
7. 只显示账户名。							#awk -F: '{print $1}' passwd
8. 打印 uid 在 30~40 范围内的用户名。					#awk -F ":" '($3>=30 && $3 <=40){print $1}' passwd
9. 倒序排列文件的所有字段。						#awk 'BEGIN{FS=":";OFS=":"}{print $NF,$(NF-1),$(NF-2),$(NF-3),$(NF-4),$(NF-5),$(NF-6)}' /etc/passwd
10. 打印 5 到 35 行。							#awk -F: '(NR>=5 && NR <=35){print }' passwd				
11. 在文件顶部加上标题“Document” 。					#awk 'BEGIN{print "Document"}{print $0}' /etc/passwd
12. 隔行删除。							#awk 'NR%2==1{print }' passwd
13. 每行抽取第一个单词。						#awk  -F "[ :]" '!/^$/{print $1}' /etc/passwd
14. 打印每行的第一个和第三个单词。					#awk -F ":" '{!/^$/ && /[[:alpha:]]/}{print $1,$5}' /etc/passwd
15. 打印字段数大于 5 个的行总数。					#awk -F: 'NR>5{print }' passwd
16. 把manpath.conf文件中的所有单词变成一行一个输出。			#awk -F " " 'BEGIN{RS="[^[:alpha:]]"} {print $0}' /etc/manpath.config | grep -n '[[:print:]]'
								#awk -F " " 'BEGIN{RS="[^[:alpha:]]+"} {print $0}' /etc/manpath.config | cat -n
17. 只显示/etc/passwd的账户和对应的shell，而账户与shell之间以制表符分割，并在第一行上添加列名lee 制表符 /bin/bash，在最后一行添加 chen 制表符 /sbin/nologin。
								#awk 'BEGIN{print "lee""\t""/bin/bash/"}BEGIN{FS=":";OFS="\t"}{print $1,$7}END{print "chen""\t""/sbin/nologin"}' /passwd
18. 搜索出所有数字大于等于1000的行，并进行相加。				#awk -F: '($3>=1000 || $4>=1000){value+=$3+$4}END{print value}' passwd
19. 搜索出第五个字段不为空的行。					# awk -F: '(NR >0 && $5!="" ){print $5}' passwd
20. 搜索出所有shell为nologin结尾的行，并进行汇总。				#awk '(/nologin$/){print }' /root/3.28/passwd  | cat -n
21. 统计/etc/passwd文件中，每行的行号，每列的列数，对应的完整行内容以制表符分隔#awk 'BEGIN{FS=":"}{print NR,NF,"\t",$0}' passwd
2,2. 输出/etc/passwd文件中uid字段小于100且gid不小于10的行。			#awk -F: '($3<100 && $4>10){print }' passwd
23. /etc/passwd文件中gid字段大于200的，输出该行的1、4字段。			#awk -F: '($4>200){print $1,$4}' passwd
24. awk配合if判断/etc/passwd文件中uid字段大于等于100则输出该行。		#awk -F: '($4>100){print }' passwd
25. 在字符串abcdefg的每个字符中插入数值，数值为1234567，效果为: a1b2c3d4e5f6g7。
								#awk  'BEGIN{FS="";OFS=""}{print$1,"1",$2,"2",$3,"3",$4,"4",$5,"5",$6,"6",$7,"7",$8,"8"}' ab.txt
								#awk {print$1"1",$2"2",$3"3",$4"4",$5"5",$6"6",$7"7",$8"8"}' ab.txt

